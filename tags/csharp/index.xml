<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSharp on Shrayas</title>
    <link>https://www.shrayas.com/tags/csharp/</link>
    <description>Recent content in CSharp on Shrayas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Shrayas</copyright>
    <lastBuildDate>Mon, 31 Jul 2017 22:30:00 +0530</lastBuildDate>
    
	<atom:link href="https://www.shrayas.com/tags/csharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generate a quick AWS dashboard using LINQPad</title>
      <link>https://www.shrayas.com/posts/generate-a-quick-aws-dashboard-using-linqpad/</link>
      <pubDate>Mon, 31 Jul 2017 22:30:00 +0530</pubDate>
      
      <guid>https://www.shrayas.com/posts/generate-a-quick-aws-dashboard-using-linqpad/</guid>
      <description>Context Logic Soft&amp;rsquo;s mainline product &amp;ndash; WINBDS is an on premise software i.e. we install it at the client location and we support them remotely.
Since a while now,this has been seeing a change. For small installations, usually an instance on the cloud works out cheaper and better. So we&amp;rsquo;ve begun suggesting people to move to AWS when the installation is small enough.
Turns out, if we&amp;rsquo;re diligent about turning the instances off when we don&amp;rsquo;t need them, a windows box on AWS is actually pretty affordable.</description>
    </item>
    
    <item>
      <title>Express solutions elegantly using your programming language</title>
      <link>https://www.shrayas.com/posts/express-solutions-elegantly-using-your-prog-lang/</link>
      <pubDate>Sun, 16 Jul 2017 15:00:00 +0530</pubDate>
      
      <guid>https://www.shrayas.com/posts/express-solutions-elegantly-using-your-prog-lang/</guid>
      <description>Introduction The post features a case study of a real life problem and the C# programming language. It explains how we went about trying to best express the solution within the bounds of the C# language.
Although we use the C# programming language here,the ideas shared in this post aren&amp;rsquo;t specific to it and can be applied to any high level language you are working with.
Problem Recently, for a customer requirement we had to work with a document that has both metadata and data.</description>
    </item>
    
    <item>
      <title>Hiccups with Hosting ASP .NET 5 apps on Linux (RC1)</title>
      <link>https://www.shrayas.com/posts/aspnet5-hosting-hiccups-nginx-kestrel/</link>
      <pubDate>Fri, 11 Dec 2015 20:45:00 +0530</pubDate>
      
      <guid>https://www.shrayas.com/posts/aspnet5-hosting-hiccups-nginx-kestrel/</guid>
      <description>Background After the recent dance with multiple Mono versions, the next step was to actually host the application.
Even though the app is largely still unfinished, I wanted to give it a shot on the staging instance to get a feel for things.
The general way to host apps on a Linux box is to have a NGINX reverse proxy in front, listening to different names on port 80 and to proxy the requests to internally running servers.</description>
    </item>
    
    <item>
      <title>ASP .NET 5, Npgsql, Linux &amp; Mono 4.2</title>
      <link>https://www.shrayas.com/posts/asp-net-5-npgsql-linux-mono-4-2/</link>
      <pubDate>Wed, 09 Dec 2015 21:30:00 +0530</pubDate>
      
      <guid>https://www.shrayas.com/posts/asp-net-5-npgsql-linux-mono-4-2/</guid>
      <description>Background Logic Soft&amp;lsquo;s primary application is a Windows based application written in C# using Windows.Forms. So when Microsoft announced ASP .NET 5 RC1, needless to say, we were quite excited.
We picked it up and started our experimentation - writing smaller applications and porting some of our side projects to the CoreCLR platform. As long as we didn&amp;rsquo;t go to the place that needed WIN32 APIs, it worked seamlessly.
With a small sum of experience, we took up the task of writing one of our internal dashboards with it.</description>
    </item>
    
  </channel>
</rss>